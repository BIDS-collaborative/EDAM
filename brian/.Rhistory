setwd("C:/Users/Brian/Dropbox/BIDS/EDAM/brian")
df = read.csv("pacificplants.csv")
df$Recommendation
str_replace_all(df$Recommendation, "[[:punct:]]", " ")
setwd("C:/Users/Brian/Dropbox/BIDS/EDAM/brian")
df = read.csv("pacificplants.csv")
gsub(df$Recommendation, "[[:punct:]]", " ")
df$Recommendation
gsub(df$Recommendation[1], "[[:punct:]]", " ")
gsub("[[:punct:]]", " ", df$Recommendation)
gsub("[[:punct:]]", "", df$Recommendation)
recommendations = gsub("[[:punct:]]", "", df$Recommendation)
unique(recommendations)
df$Scientific.Name
df2 = read.csv("pier_html_data.csv")
which(df$Scientific.Name == df2[1, 1)
which(df$Scientific.Name == df2[1, 1])
df2[1, 1]
df2[1]
typeof(df$Scientific.Name)
typeof(df2[1])
df2[1]
df2[1][1]
length(df2[1])
df2[[1]]
as.character(df2[[1]])
df2[[1]] = as.character(df2[[1]])
df2[[1]]
df2[[2]]
df$Scientific.Name
gsub("[[:punct:]]", "_", df2[[1]])
df2[[1]] = gsub("[[:punct:]]", "_", df2[[1]])
df2[[1]]
which(df$Scientific.Name == df2[1, 1])
df2[[1]] = as.character(df2[[1]])
setwd("C:/Users/Brian/Dropbox/BIDS/EDAM/brian")
df = read.csv("pacificplants.csv")
df2 = read.csv("pier_html_data.csv")
df2[[1]] = as.character(df2[[1]])
df$Scientific.Name = gsub("[[:punct:]]", "_", df$Scientific.Name)
recommendations = gsub("[[:punct:]]", "", df$Recommendation)
which(df$Scientific.Name == df2[1, 1])
df$Scientific.Name
gsub("[[:punct:]]", "_", df$Scientific.Name)
df$Scientific.Name
recommendations
gsub("[[:punct:]]", "_", df$Scientific.Name)
gsub("[[:punct:]]", "_", "hello wword")
gsub("[[:punct:]]", "_", df2[[1]])
df = read.csv("pacificplants.csv")
df2 = read.csv("pier_html_data.csv")
df2[[1]] = as.character(df2[[1]])
df$Scientific.Name = gsub(" ", "_", df$Scientific.Name)
recommendations = gsub("[[:punct:]]", "", df$Recommendation)
View(df)
which(df$Scientific.Name == df2[1, 1])
identical(df$Scientific.Name, df2[1, 1])
df$Scientific.Name == df2[1, 1]
df2[1, 1]
View(df)
df$Scientific.Name = tolower(df$Scientific.Name)
which(df$Scientific.Name == df2[1, 1])
which(df$Scientific.Name == df2[1, 1])[1]
which(df$Scientific.Name == df2[1, 1])[2]
which(df$Scientific.Name == df2[1, 1])[1]
df2[[1]][2]
df2[[1]][1]
c(1, 2) + c(2)
c(1, 2)
unique(recommendations)
recommendations = gsub("^ ", "", recommendation)
recommendations = gsub("^ ", "", recommendations)
unique(recommendations)
recommendations = gsub("[[:punct:]]", "", df$Recommendation)
risks = c()
for (i in 1:length(df2[[1]])) {
index = which(df$ScientificName == df2[[1]][i])[1]
recommendation = df$Recommendation[index]
if (recommendation == "low risk") {
risks = c(risks, 0)
}
else if (recommendation == "evaluate") {
risks = c(risks, 1)
}
else {
risks = c(risks, 2)
}
}
risks = c()
for (i in 1:length(df2[[1]])) {
index = which(df$ScientificName == df2[[1]][i])[1]
print(index)
recommendation = df$Recommendation[index]
if (recommendation == "low risk") {
risks = c(risks, 0)
}
else if (recommendation == "evaluate") {
risks = c(risks, 1)
}
else {
risks = c(risks, 2)
}
}
which(df$ScientificName == df2[[1]][1])[1]
which(df$ScientificName == df2[[1]][1])
df2[[1]][1]
View(df2)
df = read.csv("pacificplants.csv")
df2 = read.csv("pier_html_data.csv", header = FALSE)
df2[[1]] = as.character(df2[[1]])
df$Scientific.Name = gsub(" ", "_", df$Scientific.Name)
df$Scientific.Name = tolower(df$Scientific.Name)
recommendations = gsub("[[:punct:]]", "", df$Recommendation)
View(df)
View(df)
View(df2)
View(df)
df2[[1]][1]
which(df$ScientificName == df2[[1]][1])
which(df$Scientific.Name == df2[[1]][1])
risks = c()
for (i in 1:length(df2[[1]])) {
index = which(df$Scientific.Name == df2[[1]][i])[1]
recommendation = df$Recommendation[index]
if (recommendation == "low risk") {
risks = c(risks, 0)
}
else if (recommendation == "evaluate") {
risks = c(risks, 1)
}
else {
risks = c(risks, 2)
}
}
data.frame(risks)
?write.csv
write.csv(risks, file = "pier_html_labels.csv")
write.csv(risks, file = "pier_html_labels.csv", row.names = FALSE, col.names = FALSE)
write.csv(risks, file = "pier_html_labels.csv", row.names = FALSE, col.names = NA)
write.csv(risks, file = "pier_html_labels.csv", row.names = FALSE)
